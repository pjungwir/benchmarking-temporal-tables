#!/bin/bash
# run - run a benchmark, after creating a new database from the template

set -eu

benchdir="$HOME/src/fk-bench"
. $benchdir/lib.sh

function usage() {
  echo "USAGE: run [options] <config_file>"
  echo "  -C             Don't run createdb"

  exit 1
}

needs_createdb=true

while getopts 'C' opt; do
  case "$opt" in
    "C")
      needs_createdb=false
      ;;
    *)
      usage
      ;;
  esac
done
shift "$(($OPTIND -1))"

config="${1:-}"
if [ -z "$config" ]; then
  usage
fi

# infer the impl from the beginning of the config file name:
impl=""
case "$config" in
  range_agg*)
    impl=range_agg
    ;;
  lag*)
    impl=lag
    ;;
  exists*)
    impl=exists
    ;;
  *)
    # Might be okay if we don't need to run createdb,
    # e.g. for quick test runs to work out bugs.
    ;;
esac

# create a benchmark database
if [ "$needs_createdb" = true ]; then
  if [ -z "$impl" ]; then
    echo "No impl inferred"
    usage
  fi
  use_impl "${impl}"
  dropdb --force --if-exists -p $port benchbase
  createdb -p $port -T benchbase_template benchbase
  psql --no-psqlrc -p $port -c "vacuum analyze" benchbase
fi
cd ~/src/benchbase
./mvnw compile exec:java -P postgres -Dexec.args="-b temporal -c $benchdir/$config --create=false --load=false --execute=true --monitor-type=advanced --interval-monitor=1000"
# Copy the results somewhere safe:
result_filename="$(ls -t ~/src/benchbase/results/*.config.xml | head -1)"
result_base="$(basename $result_filename .config.xml)"
cp "${result_filename%%config.xml}"* $benchdir/results/
